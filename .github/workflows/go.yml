# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  get-hash:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.set-tag.outputs.tag }}
    steps:
    - uses: actions/checkout@v4
    - name: Get short commit hash
      id: set-tag
      run: |
        echo "tag=$(git rev-parse --short=10 HEAD)" >> "$GITHUB_OUTPUT"

  build-linux:
    needs: get-hash
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24.4'

    - name: Build
      run: go build -o gomcproxy -v ./...

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: gomcproxy-linux
        path: gomcproxy

  build-windows:
    needs: get-hash
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24.4'

    - name: Build
      run: go build -o gomcproxy.exe -v ./...

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: gomcproxy-windows
        path: gomcproxy.exe

  release:
    needs: [build-linux, build-windows, get-hash]
    runs-on: ubuntu-latest
    permissions:
        contents: write
    steps:
    - name: Download Linux artifact
      uses: actions/download-artifact@v4
      with:
        name: gomcproxy-linux
        path: .

    - name: Download Windows artifact
      uses: actions/download-artifact@v4
      with:
        name: gomcproxy-windows
        path: .

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ needs.get-hash.outputs.tag }}
        files: |
          gomcproxy
          gomcproxy.exe
